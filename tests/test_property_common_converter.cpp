#include <gtest/gtest.h>
#include "midi-ci/properties/PropertyCommonConverter.hpp"
#include <vector>
#include <cstdint>
#include <string>

using namespace midi_ci::properties;

TEST(PropertyCommonConverterTest, encodeToMcoded7) {
    std::string input_str = "{\"foo\": [1,2,3,4,5], \"bar\": [6,7,8,9,0]}\n";
    std::vector<uint8_t> input(input_str.begin(), input_str.end());
    std::vector<uint8_t> expected = {
        0x00, 0x7b, 0x22, 0x66, 0x6f, 0x6f, 0x22, 0x3a,
        0x00, 0x20, 0x5b, 0x31, 0x2c, 0x32, 0x2c, 0x33,
        0x00, 0x2c, 0x34, 0x2c, 0x35, 0x5d, 0x2c, 0x20,
        0x00, 0x22, 0x62, 0x61, 0x72, 0x22, 0x3a, 0x20,
        0x00, 0x5b, 0x36, 0x2c, 0x37, 0x2c, 0x38, 0x2c,
        0x00, 0x39, 0x2c, 0x30, 0x5d, 0x7d, 0x0a
    };
    
    auto result = PropertyCommonConverter::encodeToMcoded7(input);
    EXPECT_EQ(expected, result);
}

TEST(PropertyCommonConverterTest, decodeMcoded7) {
    std::string expected_str = "{\"foo\": [1,2,3,4,5], \"bar\": [6,7,8,9,0]}\n";
    std::vector<uint8_t> expected(expected_str.begin(), expected_str.end());
    std::vector<uint8_t> input = {
        0x00, 0x7b, 0x22, 0x66, 0x6f, 0x6f, 0x22, 0x3a,
        0x00, 0x20, 0x5b, 0x31, 0x2c, 0x32, 0x2c, 0x33,
        0x00, 0x2c, 0x34, 0x2c, 0x35, 0x5d, 0x2c, 0x20,
        0x00, 0x22, 0x62, 0x61, 0x72, 0x22, 0x3a, 0x20,
        0x00, 0x5b, 0x36, 0x2c, 0x37, 0x2c, 0x38, 0x2c,
        0x00, 0x39, 0x2c, 0x30, 0x5d, 0x7d, 0x0a
    };
    
    auto result = PropertyCommonConverter::decodeMcoded7(input);
    EXPECT_EQ(expected, result);
}
